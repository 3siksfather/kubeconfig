#!/bin/bash

API_SERVER_URL=$1
NAMESPACE=$2
SERVICEACCOUNT=$3
CLUSTERNAME=$4

if [ -z "${API_SERVER_URL}" ]; then
  echo "requried API_SERVER_URL"
  echo "usage: make_kubeconfig.sh API_SERVER_URL NAMESPACE SERVICEACCOUNT CLUSTERNAME"
  exit 1
fi

if [ -z "${NAMESPACE}" ]; then
  echo "requried NAMESPACE"
  echo "usage: make_kubeconfig.sh API_SERVER_URL NAMESPACE SERVICEACCOUNT CLUSTERNAME"
  exit 1
fi

if [ -z "${SERVICEACCOUNT}" ]; then
  echo "requried SERVICEACCOUNT"
  echo "usage: make_kubeconfig.sh API_SERVER_URL NAMESPACE SERVICEACCOUNT CLUSTERNAME"
  exit 1
fi

if [ -z "${CLUSTERNAME}" ]; then
  echo "requried SERVICEACCOUNT"
  echo "usage: make_kubeconfig.sh API_SERVER_URL NAMESPACE SERVICEACCOUNT CLUSTERNAME"
  exit 1
fi

SECRET_NAME=$(kubectl -n $NAMESPACE get serviceaccount $SERVICEACCOUNT -o jsonpath='{.secrets[].name}')
CA=$(echo LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1ERXhNakEzTWpNME1Wb1hEVE16TURFd09UQTNNak0wTVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFpCCjhqSmhKWk1sVGx4VU1xSnpQMlAxbGYzTkgxMWg5eDBDalNKZUc3OTB4aVBPZWloWkRZU3YwVm1jZ1g0OGF4ZlIKTFprUWRhbnJrSkdkcGlmUVR0VTNqOUZhWnEvL3U4UWZra3ovNVc5dm10NllXbGVmRGFBQlZlQWNqNndHUHduawpHOWhnVXpveXdCOUhPYW5JQlRzd0dBajBYdzd5bjRxckVEYVJjeDhqS1kzWFZTRDBZU252V3dHUDhwNkFxd1ZTCi9QUHZBUjJ5WE5HMm9NRlNTWFM1cTQybjB6c1V4WmdtMytOUkRJS2IxbXd2TzQ3QWZYVENrT2JIY1lRSkJDb1kKZHo0OVBkRThLYjR6N2NLRTZuRTY0L1k4ODRVTmF0ZnFRcmVrVjF1ekhJc3ZUNEE3WVdNYUJ5eVFkaVZxT1AwcQp5Z3hDcFlkNTB6eHo2L3cwcmZrQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZMcXZHTFdESFE0ZjF3N3habnJrdm9EaHFuNHBNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSjhaTVZ3cGo3NHV6VUNSU05TbwpIMnlieXNwbWZNQ1Jka1dJdWhsLyt4MWV1amMzUWg2bE93eHptWWo4RVRvbGhwSFk1K2JQSFU3MlFDZUprWWVmCklNL1A4elYxNEhob0ZibUxXS29EMUJsalRIN3FQdVpGV0JRNHMvVUgrWlVCdDNuS1drZ0N0REYxa0ROcld3bkYKZng3V1VveXNsN09kNUFnc3pGZTlOdkRENTdpOFJ2dkc5R2FCaUtHNld0a2JablQ0Skx1ZkNheEc3b2VQM0JmUwpESW9TWnNTdWo0bnU3SDFYay9venQreGhSQ0NhekhEM2svZW4zY25ObERxeVAreHM3ZGY4aTU5T2FseGo5bU9BCmNkaHJ4UHVESGRQd1BxcDJmMFZrVzc5K3cxcHlOOGgxUC90WFEwVE1lL3ZkMFBua0NhTXdIVUswemFEVEdGc0IKOXFBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==)
TOKEN=$(kubectl -n $NAMESPACE get secret $SECRET_NAME -o jsonpath='{.data.token}' | base64 --decode)

echo "
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: ${CA}
    server: https://${API_SERVER_URL}
  name: ${CLUSTERNAME}
contexts:
- context:
    cluster: ${CLUSTERNAME}
    namespace: ${NAMESPACE}
    user: ${SERVICEACCOUNT}_${CLUSTERNAME}
  name: ${SERVICEACCOUNT}_${CLUSTERNAME}
current-context: ${SERVICEACCOUNT}_${CLUSTERNAME}
kind: Config
preferences: {}
users:
- name: ${SERVICEACCOUNT}_${CLUSTERNAME}
  user:
    token: ${TOKEN}
"
